#!/bin/bash

# Helper for Jane - Automated Setup Script for Ubuntu
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç –∏ –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ–µ–∫—Ç

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ sudo
check_sudo() {
    if [[ $EUID -eq 0 ]]; then
        error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å sudo –ø—Ä–∞–≤–∞–º–∏."
    fi
    
    if ! sudo -n true 2>/dev/null; then
        log "–¢—Ä–µ–±—É—é—Ç—Å—è sudo –ø—Ä–∞–≤–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
        sudo -v
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    sudo apt update -y
    
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    sudo apt install -y curl wget git build-essential software-properties-common apt-transport-https ca-certificates gnupg lsb-release
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
install_nodejs() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js..."
    
    if command -v node &> /dev/null; then
        NODE_VERSION=$(node -v | sed 's/v//')
        MAJOR_VERSION=$(echo $NODE_VERSION | cut -d. -f1)
        
        if [[ $MAJOR_VERSION -ge 18 ]]; then
            log "Node.js $NODE_VERSION —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            return 0
        else
            warn "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è Node.js ($NODE_VERSION), –æ–±–Ω–æ–≤–ª—è–µ–º..."
        fi
    fi
    
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18..."
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt install -y nodejs
    
    log "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è Node.js: $(node -v)"
    log "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è npm: $(npm -v)"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis
install_redis() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Redis..."
    
    if command -v redis-server &> /dev/null; then
        log "Redis —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ Redis
        if ! pgrep redis-server > /dev/null; then
            log "–ó–∞–ø—É—Å–∫ Redis..."
            sudo systemctl start redis-server
            sudo systemctl enable redis-server
        fi
        return 0
    fi
    
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis..."
    sudo apt install -y redis-server
    
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis..."
    # –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Redis
    sudo sed -i 's/^bind 127.0.0.1 ::1/bind 127.0.0.1/' /etc/redis/redis.conf
    sudo sed -i 's/^# maxmemory <bytes>/maxmemory 256mb/' /etc/redis/redis.conf
    sudo sed -i 's/^# maxmemory-policy noeviction/maxmemory-policy allkeys-lru/' /etc/redis/redis.conf
    
    log "–ó–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ Redis..."
    sudo systemctl start redis-server
    sudo systemctl enable redis-server
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã Redis
    if redis-cli ping | grep -q "PONG"; then
        log "Redis —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
    else
        error "Redis –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ ping"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2 –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏
install_pm2() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
    if ! command -v pm2 &> /dev/null; then
        sudo npm install -g pm2
        pm2 startup
        log "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –∫–æ—Ç–æ—Ä—É—é –ø–æ–∫–∞–∑–∞–ª PM2 –≤—ã—à–µ (sudo env PATH=...)"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã PM2 startup..."
    else
        log "PM2 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
setup_project() {
    PROJECT_DIR="$HOME/helper-for-jane"
    
    if [[ -d "$PROJECT_DIR" ]]; then
        log "–ü—Ä–æ–µ–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ $PROJECT_DIR"
        read -p "–•–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
            cd "$PROJECT_DIR"
            git pull origin main || git pull origin master
        fi
    else
        log "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
        read -p "–í–≤–µ–¥–∏—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: " REPO_URL
        git clone "$REPO_URL" "$PROJECT_DIR"
    fi
    
    cd "$PROJECT_DIR"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    log "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p uploads data logs
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."
    npm install
    
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend..."
    cd server
    npm install
    cd ..
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
setup_config() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # Backend –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    if [[ ! -f "server/.env" ]]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ server/.env..."
        cat > server/.env << EOF
# Server Configuration
PORT=3001
NODE_ENV=development

# Database
DATABASE_URL=./data/database.sqlite

# Redis
REDIS_URL=redis://localhost:6379

# OpenAI API
OPENAI_API_KEY=your_openai_api_key_here

# Telegram Bot (optional)
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=

# Yandex Disk (optional)
YANDEX_DISK_TOKEN=

# Security
JWT_SECRET=$(openssl rand -base64 32)

# File Upload
MAX_FILE_SIZE=10485760
UPLOAD_DIR=./uploads

# Performance
QUEUE_CONCURRENCY=3
QUEUE_RETRY_ATTEMPTS=3
QUEUE_RETRY_DELAY=5000
EOF
    else
        log "server/.env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    # Frontend –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    if [[ ! -f ".env" ]]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ .env –¥–ª—è frontend..."
        cat > .env << EOF
VITE_API_BASE_URL=http://localhost:3001/api
VITE_APP_NAME=Helper for Jane
VITE_APP_VERSION=1.0.0
EOF
    else
        log ".env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setup_database() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    cd server
    
    # –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π
    if [[ -f "package.json" ]] && npm run | grep -q "migrate"; then
        log "–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
        npm run migrate
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if [[ -f "package.json" ]] && npm run | grep -q "seed"; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
        npm run seed
    fi
    
    cd ..
}

# –°–æ–∑–¥–∞–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_pm2_config() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    cat > ecosystem.config.js << EOF
module.exports = {
  apps: [
    {
      name: 'helper-jane-backend',
      script: 'server/dist/server.js',
      cwd: '$(pwd)',
      env: {
        NODE_ENV: 'development',
        PORT: 3001
      },
      env_production: {
        NODE_ENV: 'production',
        PORT: 3001
      },
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '1G',
      error_file: './logs/backend-error.log',
      out_file: './logs/backend-out.log',
      log_file: './logs/backend.log'
    },
    {
      name: 'helper-jane-frontend',
      script: 'npm',
      args: 'run dev',
      cwd: '$(pwd)',
      env: {
        NODE_ENV: 'development'
      },
      instances: 1,
      autorestart: true,
      watch: false,
      error_file: './logs/frontend-error.log',
      out_file: './logs/frontend-out.log',
      log_file: './logs/frontend.log'
    }
  ]
};
EOF
}

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
build_project() {
    log "–°–±–æ—Ä–∫–∞ backend..."
    cd server
    if npm run | grep -q "build"; then
        npm run build
    else
        warn "Backend build script –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
    fi
    cd ..
    
    log "–°–±–æ—Ä–∫–∞ frontend..."
    if npm run | grep -q "build"; then
        npm run build
    else
        warn "Frontend build script –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
create_management_scripts() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
    
    # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
    cat > start.sh << 'EOF'
#!/bin/bash
echo "üöÄ –ó–∞–ø—É—Å–∫ Helper for Jane..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if ! pgrep redis-server > /dev/null; then
    echo "‚ö†Ô∏è  Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
    sudo systemctl start redis-server
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [[ ! -f "server/data/database.sqlite" ]]; then
    echo "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    cd server && npm run migrate && cd ..
fi

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ PM2
pm2 start ecosystem.config.js

echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo "üåê Frontend: http://localhost:5173"
echo "üîß Backend: http://localhost:3001"
echo "üìä PM2 Dashboard: pm2 monit"
EOF

    # –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    cat > stop.sh << 'EOF'
#!/bin/bash
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Helper for Jane..."
pm2 stop ecosystem.config.js
pm2 delete ecosystem.config.js
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
EOF

    # –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    cat > restart.sh << 'EOF'
#!/bin/bash
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Helper for Jane..."
pm2 restart ecosystem.config.js
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ!"
EOF

    # –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
    cat > logs.sh << 'EOF'
#!/bin/bash
echo "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Helper for Jane..."
pm2 logs
EOF

    # –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π
    cat > configure.sh << 'EOF'
#!/bin/bash
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–µ–π..."

read -p "–í–≤–µ–¥–∏—Ç–µ OpenAI API Key: " OPENAI_KEY
read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): " TELEGRAM_TOKEN
read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Chat ID (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): " TELEGRAM_CHAT
read -p "–í–≤–µ–¥–∏—Ç–µ Yandex Disk Token (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): " YANDEX_TOKEN

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞
sed -i "s/OPENAI_API_KEY=.*/OPENAI_API_KEY=$OPENAI_KEY/" server/.env
sed -i "s/TELEGRAM_BOT_TOKEN=.*/TELEGRAM_BOT_TOKEN=$TELEGRAM_TOKEN/" server/.env
sed -i "s/TELEGRAM_CHAT_ID=.*/TELEGRAM_CHAT_ID=$TELEGRAM_CHAT/" server/.env
sed -i "s/YANDEX_DISK_TOKEN=.*/YANDEX_DISK_TOKEN=$YANDEX_TOKEN/" server/.env

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!"
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./restart.sh"
EOF

    chmod +x start.sh stop.sh restart.sh logs.sh configure.sh
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
health_check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
    if redis-cli ping | grep -q "PONG"; then
        log "‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå Redis –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    if command -v node &> /dev/null; then
        log "‚úÖ Node.js $(node -v) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        error "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
    if command -v pm2 &> /dev/null; then
        log "‚úÖ PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        error "‚ùå PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    if netstat -tuln | grep -q ":3001 "; then
        warn "‚ö†Ô∏è  –ü–æ—Ä—Ç 3001 —É–∂–µ –∑–∞–Ω—è—Ç"
    else
        log "‚úÖ –ü–æ—Ä—Ç 3001 —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
    
    if netstat -tuln | grep -q ":5173 "; then
        warn "‚ö†Ô∏è  –ü–æ—Ä—Ç 5173 —É–∂–µ –∑–∞–Ω—è—Ç"
    else
        log "‚úÖ –ü–æ—Ä—Ç 5173 —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                    Helper for Jane                           ‚ïë"
    echo "‚ïë                Automated Setup Script                       ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    
    check_sudo
    update_system
    install_nodejs
    install_redis
    install_pm2
    setup_project
    setup_config
    setup_database
    create_pm2_config
    build_project
    create_management_scripts
    health_check
    
    echo -e "${GREEN}"
    echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏: ./configure.sh"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./start.sh"
    echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5173"
    echo ""
    echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   ./start.sh    - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "   ./stop.sh     - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "   ./restart.sh  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "   ./logs.sh     - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo "   pm2 monit     - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo -e "${NC}"
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"